{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win-10\\\\Desktop\\\\github\\\\Day7\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\"; // import AuthContext from \"./components/store/auth-context\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\"); //use to store data\n  //   setIsLoggedIn(true);\n  // };\n  // const logoutHandler = () => {\n  //   localStorage.removeItem(\"isLoggedIn\");\n  //   setIsLoggedIn(false);\n  // };\n  // </AuthContext.Provider>\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Provider\n    //   value={{\n    //     isLoggedIn: isLoggedIn,\n    //     onLogout: logoutHandler,\n    //   }}\n    // >\n    // <MainHeader />\n    _jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_c = App;\nexport default App; //  relosd a page you will go back to the same page you were before\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Login","Home","MainHeader","App","isLoggedIn","loginHandler","logoutHandler"],"sources":["C:/Users/Win-10/Desktop/github/Day7/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n// import AuthContext from \"./components/store/auth-context\";\n\nfunction App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n\n  //   localStorage.setItem(\"isLoggedIn\", \"1\"); //use to store data\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem(\"isLoggedIn\");\n  //   setIsLoggedIn(false);\n  // };\n\n  // </AuthContext.Provider>\n  return (\n    // <AuthContext.Provider\n    //   value={{\n      //     isLoggedIn: isLoggedIn,\n    //     onLogout: logoutHandler,\n    //   }}\n    // >\n      // <MainHeader />\n      <React.Fragment>\n        {/* isAuthenticated={isLoggedIn} onLogout={logoutHandler} */}\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </React.Fragment>\n  );\n}\n\nexport default App;\n\n//  relosd a page you will go back to the same page you were before\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;EACb;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;IAAA;IACE;IACA;IACE;IACF;IACA;IACA;IACE;IACA,QAAC,KAAD,CAAO,QAAP;MAAA,uBAEA;QAAA,WACG,CAACC,UAAD,iBAAe,QAAC,KAAD;UAAO,OAAO,EAAEC;QAAhB;UAAA;UAAA;UAAA;QAAA,QADlB,EAEGD,UAAU,iBAAI,QAAC,IAAD;UAAM,QAAQ,EAAEE;QAAhB;UAAA;UAAA;UAAA;QAAA,QAFjB;MAAA;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA;EARJ;AAgBD;;KAjCQH,G;AAmCT,eAAeA,GAAf,C,CAEA"},"metadata":{},"sourceType":"module"}