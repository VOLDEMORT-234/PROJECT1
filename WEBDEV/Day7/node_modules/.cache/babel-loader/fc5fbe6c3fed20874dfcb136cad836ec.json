{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win-10\\\\Desktop\\\\github\\\\Day7\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\"; // import MainHeader from \"./components/MainHeader/MainHeader\";\n// import { useContext } from \"react\";\n\nimport AuthContext from \"./components/store/auth-context\"; // import AuthContext from \"./components/store/auth-context\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const ctx = useContext(AuthContext); // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\"); //use to store data\n  //   setIsLoggedIn(true);\n  // };\n  // const logoutHandler = () => {\n  //   localStorage.removeItem(\"isLoggedIn\");\n  //   setIsLoggedIn(false);\n  // };\n  // </AuthContext.Provider>\n\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Provider\n    //   value={{\n    //     isLoggedIn: isLoggedIn,\n    //     onLogout: logoutHandler,\n    //   }}\n    // >\n    // <MainHeader />\n    _jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = App;\nexport default App; //  relosd a page you will go back to the same page you were before\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","Login","Home","AuthContext","App","ctx","isLoggedIn"],"sources":["C:/Users/Win-10/Desktop/github/Day7/src/App.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\n// import MainHeader from \"./components/MainHeader/MainHeader\";\n// import { useContext } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\n// import AuthContext from \"./components/store/auth-context\";\n\nfunction App() {\n  const ctx = useContext(AuthContext);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n\n  //   localStorage.setItem(\"isLoggedIn\", \"1\"); //use to store data\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem(\"isLoggedIn\");\n  //   setIsLoggedIn(false);\n  // };\n\n  // </AuthContext.Provider>\n  return (\n    // <AuthContext.Provider\n    //   value={{\n    //     isLoggedIn: isLoggedIn,\n    //     onLogout: logoutHandler,\n    //   }}\n    // >\n    // <MainHeader />\n    <React.Fragment>\n      {/* isAuthenticated={isLoggedIn} onLogout={logoutHandler} */}\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n//  relosd a page you will go back to the same page you were before\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,GAAG,GAAGL,UAAU,CAACG,WAAD,CAAtB,CADa,CAEb;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;;EACA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,KAAD,CAAO,QAAP;MAAA,uBAEE;QAAA,WACG,CAACE,GAAG,CAACC,UAAL,iBAAmB,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA,QADtB,EAEGD,GAAG,CAACC,UAAJ,iBAAkB,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA,QAFrB;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA;EARF;AAgBD;;GAlCQF,G;;KAAAA,G;AAoCT,eAAeA,GAAf,C,CAEA"},"metadata":{},"sourceType":"module"}