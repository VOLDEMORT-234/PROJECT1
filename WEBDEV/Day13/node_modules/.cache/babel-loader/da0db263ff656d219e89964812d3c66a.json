{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win-10\\\\Desktop\\\\github\\\\Day13\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"./hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enter\n  } = useInput(); // const nameInputRef = useRef();\n\n  const [enteredName, setEnteredName] = useState(\"\"); // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n\n  const [enteredNametouch, setEnteredNametouch] = useState(false); // const [formIsValid, setFormIsValid] = useState(false);\n  //\n  //\n\n  const enteredNameIsValid = enteredName.trim() !== \"\"; // const enteredAge\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n  let formIsValid = false; // useEffect(() => {\n\n  if (enteredNameIsValid) {\n    // console.log(\"name is valid\");\n    // setFormIsValid(true);\n    formIsValid = true;\n  } // else {\n  //   // setFormIsValid(false);\n  //   formIsValid = false;\n  // }\n  // }, [enteredNameIsValid]); //if value in the dependensies changes this value run again\n\n\n  const NameInputChangeHandler = event => {\n    setEnteredName(event.target.value); // if (enteredName.trim() !== \"\") {\n    //   setEnteredNameIsValid(true);\n    //   // return;\n    // }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNametouch(true); // if (enteredName.trim() === \"\") {\n    //   setEnteredNameIsValid(false);\n    //   // return;\n    // }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNametouch(true);\n\n    if (!enteredNameIsValid) {\n      // setEnteredNameIsValid(false);\n      return;\n    } // setEnteredNameIsValid(true); shorting of code\n    // default value is browser send http request to a server backend Automatically\n    // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n\n    setEnteredName(\"\");\n    setEnteredNametouch(false);\n  }; // const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n\n  const nameInputClasses = !nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: NameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"R1nH95GT2OovYDzWUCoCxWKADyc=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enter","enteredName","setEnteredName","enteredNametouch","setEnteredNametouch","enteredNameIsValid","trim","nameInputIsInvalid","formIsValid","NameInputChangeHandler","event","target","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses"],"sources":["C:/Users/Win-10/Desktop/github/Day13/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"./hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {value:enter}=useInput();\n  // const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNametouch, setEnteredNametouch] = useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false);\n  //\n  //\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  // const enteredAge\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n  let formIsValid = false;\n\n  // useEffect(() => {\n  if (enteredNameIsValid) {\n    // console.log(\"name is valid\");\n    // setFormIsValid(true);\n    formIsValid = true;\n  }\n  // else {\n  //   // setFormIsValid(false);\n  //   formIsValid = false;\n  // }\n  // }, [enteredNameIsValid]); //if value in the dependensies changes this value run again\n\n  const NameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n\n    // if (enteredName.trim() !== \"\") {\n    //   setEnteredNameIsValid(true);\n    //   // return;\n    // }\n  };\n  const nameInputBlurHandler = (event) => {\n    setEnteredNametouch(true);\n\n    // if (enteredName.trim() === \"\") {\n    //   setEnteredNameIsValid(false);\n    //   // return;\n    // }\n  };\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNametouch(true);\n\n    if (!enteredNameIsValid) {\n      // setEnteredNameIsValid(false);\n      return;\n    }\n\n    // setEnteredNameIsValid(true); shorting of code\n    // default value is browser send http request to a server backend Automatically\n    // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    setEnteredName(\"\");\n    setEnteredNametouch(false);\n  };\n\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n  const nameInputClasses = !nameInputIsInvalid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={NameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n        {/* to disable a button there is another attribute */}\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IAACC,KAAK,EAACC;EAAP,IAAcJ,QAAQ,EAA5B,CAD6B,CAE7B;;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAH6B,CAI7B;;EACA,MAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,KAAD,CAAxD,CAL6B,CAM7B;EACA;EACA;;EACA,MAAMU,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD,CAT6B,CAU7B;;EACA,MAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,gBAAlD;EAEA,IAAIK,WAAW,GAAG,KAAlB,CAb6B,CAe7B;;EACA,IAAIH,kBAAJ,EAAwB;IACtB;IACA;IACAG,WAAW,GAAG,IAAd;EACD,CApB4B,CAqB7B;EACA;EACA;EACA;EACA;;;EAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;IACxCR,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaZ,KAAd,CAAd,CADwC,CAGxC;IACA;IACA;IACA;EACD,CAPD;;EAQA,MAAMa,oBAAoB,GAAIF,KAAD,IAAW;IACtCN,mBAAmB,CAAC,IAAD,CAAnB,CADsC,CAGtC;IACA;IACA;IACA;EACD,CAPD;;EAQA,MAAMS,qBAAqB,GAAIH,KAAD,IAAW;IACvCA,KAAK,CAACI,cAAN;IAEAV,mBAAmB,CAAC,IAAD,CAAnB;;IAEA,IAAI,CAACC,kBAAL,EAAyB;MACvB;MACA;IACD,CARsC,CAUvC;IACA;IACA;IACA;IACA;;;IAEAH,cAAc,CAAC,EAAD,CAAd;IACAE,mBAAmB,CAAC,KAAD,CAAnB;EACD,CAlBD,CA3C6B,CA+D7B;;;EAEA,MAAMW,gBAAgB,GAAG,CAACR,kBAAD,GACrB,cADqB,GAErB,sBAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEM,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEE,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE;QACA,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAEN,sBAJZ;QAKE,MAAM,EAAEG,oBALV;QAME,KAAK,EAAEX;MANT;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGM,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACC,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CA3FD;;GAAMX,W;UACgBD,Q;;;KADhBC,W;AA6FN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}