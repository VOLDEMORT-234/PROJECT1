{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win-10\\\\Desktop\\\\github\\\\Day13\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  // const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\"); // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n\n  const [enteredNametouch, setEnteredNametouch] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\"; //  useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"name is valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  const NameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true); // return;\n    }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNametouch(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false); // return;\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNametouch(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true); // default value is browser send http request to a server backend Automatically\n    // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n  const nameInputClasses = !nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: NameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"OxARRQMIxPpZ3iVpoVS0sSbL6nE=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNametouch","setEnteredNametouch","enteredNameIsValid","trim","NameInputChangeHandler","event","target","value","setEnteredNameIsValid","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputIsInvalid","nameInputClasses"],"sources":["C:/Users/Win-10/Desktop/github/Day13/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState(\"\");\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNametouch, setEnteredNametouch] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  //  useEffect(() => {\n  //   if (enteredNameIsValid) {\n  //     console.log(\"name is valid\");\n  //   }\n  // }, [enteredNameIsValid]);\n\n  const NameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n      // return;\n    }\n  };\n  const nameInputBlurHandler = (event) => {\n    setEnteredNametouch(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      // return;\n    }\n  };\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNametouch(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    // default value is browser send http request to a server backend Automatically\n    // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n  const nameInputClasses = !nameInputIsInvalid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={NameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAF6B,CAG7B;;EACA,MAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,KAAD,CAAxD;EAEA,MAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD,CAN6B,CAO7B;EACA;EACA;EACA;EACA;;EAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;IACxCN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;IAEA,IAAIT,WAAW,CAACK,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BK,qBAAqB,CAAC,IAAD,CAArB,CAD6B,CAE7B;IACD;EACF,CAPD;;EAQA,MAAMC,oBAAoB,GAAIJ,KAAD,IAAW;IACtCJ,mBAAmB,CAAC,IAAD,CAAnB;;IAEA,IAAIH,WAAW,CAACK,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BK,qBAAqB,CAAC,KAAD,CAArB,CAD6B,CAE7B;IACD;EACF,CAPD;;EAQA,MAAME,qBAAqB,GAAIL,KAAD,IAAW;IACvCA,KAAK,CAACM,cAAN;IAEAV,mBAAmB,CAAC,IAAD,CAAnB;;IAEA,IAAIH,WAAW,CAACK,IAAZ,OAAuB,EAA3B,EAA+B;MAC7BK,qBAAqB,CAAC,KAAD,CAArB;MACA;IACD;;IAEDA,qBAAqB,CAAC,IAAD,CAArB,CAVuC,CAWvC;IACA;IACA;IACA;;IAEAT,cAAc,CAAC,EAAD,CAAd;EACD,CAjBD;;EAmBA,MAAMa,kBAAkB,GAAG,CAACV,kBAAD,IAAuBF,gBAAlD;EAEA,MAAMa,gBAAgB,GAAG,CAACD,kBAAD,GACrB,cADqB,GAErB,sBAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEF,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEG,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE;QACA,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAET,sBAJZ;QAKE,MAAM,EAAEK,oBALV;QAME,KAAK,EAAEX;MANT;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGc,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA3ED;;GAAMhB,W;;KAAAA,W;AA6EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}