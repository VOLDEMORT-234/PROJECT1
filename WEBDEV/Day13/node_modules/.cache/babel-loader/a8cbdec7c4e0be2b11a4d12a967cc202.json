{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Win-10\\\\Desktop\\\\github\\\\Day13\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"./hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    ValueInputIsInvalid: nameInputIsInvalid,\n    ValueInputBlurHandler: nameInputBlurHandler,\n    ValueInputChangeHandler: NameInputChangeHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\"); // const nameInputRef = useRef();\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  // const [enteredNametouch, setEnteredNametouch] = useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false);\n  //\n  //\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n  // // const enteredAge\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n  let formIsValid = false; // useEffect(() => {\n\n  if (enteredNameIsValid) {\n    // console.log(\"name is valid\");\n    // setFormIsValid(true);\n    formIsValid = true;\n  } // else {\n  //   // setFormIsValid(false);\n  //   formIsValid = false;\n  // }\n  // }, [enteredNameIsValid]); //if value in the dependensies changes this value run again\n  // const NameInputChangeHandler = (event) => {\n  //   setEnteredName(event.target.value);\n  //   // if (enteredName.trim() !== \"\") {\n  //   //   setEnteredNameIsValid(true);\n  //   //   // return;\n  //   // }\n  // };\n  // const nameInputBlurHandler = (event) => {\n  //   setEnteredNametouch(true);\n  //   // if (enteredName.trim() === \"\") {\n  //   //   setEnteredNameIsValid(false);\n  //   //   // return;\n  //   // }\n  // };\n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault(); // setEnteredNametouch(true);\n\n    if (!enteredNameIsValid) {\n      // setEnteredNameIsValid(false);\n      return;\n    } // setEnteredNameIsValid(true); shorting of code\n    // default value is browser send http request to a server backend Automatically\n    // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n\n    setEnteredName(\"\"); // setEnteredNametouch(false);\n  }; // const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n\n  const nameInputClasses = !nameInputIsInvalid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: NameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"0pgrlW9PSclFuG+lrDePYsYZJOo=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","ValueInputIsInvalid","nameInputIsInvalid","ValueInputBlurHandler","nameInputBlurHandler","ValueInputChangeHandler","NameInputChangeHandler","reset","resetNameInput","trim","formIsValid","formSubmissionHandler","event","preventDefault","setEnteredName","nameInputClasses"],"sources":["C:/Users/Win-10/Desktop/github/Day13/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"./hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    ValueInputIsInvalid: nameInputIsInvalid,\n    ValueInputBlurHandler: nameInputBlurHandler,\n    ValueInputChangeHandler: NameInputChangeHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  // const nameInputRef = useRef();\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  // const [enteredNametouch, setEnteredNametouch] = useState(false);\n  // const [formIsValid, setFormIsValid] = useState(false);\n  //\n  //\n  // const enteredNameIsValid = enteredName.trim() !== \"\";\n  // // const enteredAge\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n  let formIsValid = false;\n\n  // useEffect(() => {\n  if (enteredNameIsValid) {\n    // console.log(\"name is valid\");\n    // setFormIsValid(true);\n    formIsValid = true;\n  }\n  // else {\n  //   // setFormIsValid(false);\n  //   formIsValid = false;\n  // }\n  // }, [enteredNameIsValid]); //if value in the dependensies changes this value run again\n\n  // const NameInputChangeHandler = (event) => {\n  //   setEnteredName(event.target.value);\n\n  //   // if (enteredName.trim() !== \"\") {\n  //   //   setEnteredNameIsValid(true);\n  //   //   // return;\n  //   // }\n  // };\n  // const nameInputBlurHandler = (event) => {\n  //   setEnteredNametouch(true);\n\n  //   // if (enteredName.trim() === \"\") {\n  //   //   setEnteredNameIsValid(false);\n  //   //   // return;\n  //   // }\n  // };\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    // setEnteredNametouch(true);\n\n    if (!enteredNameIsValid) {\n      // setEnteredNameIsValid(false);\n      return;\n    }\n\n    // setEnteredNameIsValid(true); shorting of code\n    // default value is browser send http request to a server backend Automatically\n    // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    setEnteredName(\"\");\n    // setEnteredNametouch(false);\n  };\n\n  // const nameInputIsInvalid = !enteredNameIsValid && enteredNametouch;\n\n  const nameInputClasses = !nameInputIsInvalid\n    ? \"form-control\"\n    : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={NameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n        {/* to disable a button there is another attribute */}\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IACJC,KAAK,EAAEC,WADH;IAEJC,OAAO,EAAEC,kBAFL;IAGJC,mBAAmB,EAAEC,kBAHjB;IAIJC,qBAAqB,EAAEC,oBAJnB;IAKJC,uBAAuB,EAAEC,sBALrB;IAMJC,KAAK,EAAEC;EANH,IAOFd,QAAQ,CAAEG,KAAD,IAAWA,KAAK,CAACY,IAAN,OAAiB,EAA7B,CAPZ,CAD6B,CAS7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,WAAW,GAAG,KAAlB,CApB6B,CAsB7B;;EACA,IAAIV,kBAAJ,EAAwB;IACtB;IACA;IACAU,WAAW,GAAG,IAAd;EACD,CA3B4B,CA4B7B;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EACA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;IACvCA,KAAK,CAACC,cAAN,GADuC,CAGvC;;IAEA,IAAI,CAACb,kBAAL,EAAyB;MACvB;MACA;IACD,CARsC,CAUvC;IACA;IACA;IACA;IACA;;;IAEAc,cAAc,CAAC,EAAD,CAAd,CAhBuC,CAiBvC;EACD,CAlBD,CAlD6B,CAsE7B;;;EAEA,MAAMC,gBAAgB,GAAG,CAACb,kBAAD,GACrB,cADqB,GAErB,sBAFJ;EAIA,oBACE;IAAM,QAAQ,EAAES,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEI,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE;QACA,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAET,sBAJZ;QAKE,MAAM,EAAEF,oBALV;QAME,KAAK,EAAEN;MANT;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGI,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACQ,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAlGD;;GAAMf,W;UAQAD,Q;;;KARAC,W;AAoGN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}