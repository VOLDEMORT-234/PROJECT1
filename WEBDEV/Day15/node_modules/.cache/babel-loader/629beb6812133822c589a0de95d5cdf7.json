{"ast":null,"code":"// const redux = require(\"redux\");\n// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\"; // import {counterActions}\n\nconst initialcounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialcounterState,\n  reducers: {\n    login() {},\n\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthstate = {\n  isAuthenticated: false\n};\nconst AuthSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthstate,\n  reducer: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n}); // counterSlice.actions.toggleCounter;\n// export const INCREMENT = \"increment\";\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === INCREMENT) {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"increaseby5\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n// only one store can be called doesnot matter in create slice\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: AuthSlice.reducer\n  } // reducer: { counter: counterSlice.reducer },\n\n});\nexport const counterAction = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialcounterState","counter","showCounter","counterSlice","name","initialState","reducers","login","increment","state","decrement","increase","action","amount","toggleCounter","initialAuthstate","isAuthenticated","AuthSlice","reducer","logout","store","auth","counterAction","actions"],"sources":["C:/Users/Win-10/Desktop/github/WEBDEV/Day15/src/store/index.js"],"sourcesContent":["// const redux = require(\"redux\");\r\n// import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n// import {counterActions}\r\nconst initialcounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: initialcounterState,\r\n  reducers: {\r\n    login() {},\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthstate = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst AuthSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthstate,\r\n  reducer: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\n// counterSlice.actions.toggleCounter;\r\n\r\n// export const INCREMENT = \"increment\";\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === INCREMENT) {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return {\r\n//       counter: state.counter - 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"increaseby5\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       showCounter: !state.showCounter,\r\n//       counter: state.counter,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n// only one store can be called doesnot matter in create slice\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: AuthSlice.reducer },\r\n  // reducer: { counter: counterSlice.reducer },\r\n});\r\n\r\nexport const counterAction = counterSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C,C,CACA;;AACA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAEL,mBAFiB;EAG/BM,QAAQ,EAAE;IACRC,KAAK,GAAG,CAAE,CADF;;IAERC,SAAS,CAACC,KAAD,EAAQ;MACfA,KAAK,CAACR,OAAN;IACD,CAJO;;IAKRS,SAAS,CAACD,KAAD,EAAQ;MACfA,KAAK,CAACR,OAAN;IACD,CAPO;;IAQRU,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACtBH,KAAK,CAACR,OAAN,GAAgBQ,KAAK,CAACR,OAAN,GAAgBW,MAAM,CAACC,MAAvC;IACD,CAVO;;IAWRC,aAAa,CAACL,KAAD,EAAQ;MACnBA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;IACD;;EAbO;AAHqB,CAAD,CAAhC;AAoBA,MAAMa,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AADM,CAAzB;AAIA,MAAMC,SAAS,GAAGnB,WAAW,CAAC;EAC5BM,IAAI,EAAE,gBADsB;EAE5BC,YAAY,EAAEU,gBAFc;EAG5BG,OAAO,EAAE;IACPX,KAAK,CAACE,KAAD,EAAQ;MACXA,KAAK,CAACO,eAAN,GAAwB,IAAxB;IACD,CAHM;;IAIPG,MAAM,CAACV,KAAD,EAAQ;MACZA,KAAK,CAACO,eAAN,GAAwB,KAAxB;IACD;;EANM;AAHmB,CAAD,CAA7B,C,CAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EAC3BmB,OAAO,EAAE;IAAEjB,OAAO,EAAEE,YAAY,CAACe,OAAxB;IAAiCG,IAAI,EAAEJ,SAAS,CAACC;EAAjD,CADkB,CAE3B;;AAF2B,CAAD,CAA5B;AAKA,OAAO,MAAMI,aAAa,GAAGnB,YAAY,CAACoB,OAAnC;AAEP,eAAeH,KAAf"},"metadata":{},"sourceType":"module"}